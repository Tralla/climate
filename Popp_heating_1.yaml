blueprint:
  name: Heating - Popp Control 1p
  description: Control your heating with options for person home, if temp is below
    a specific value, set temp, and heating between specific times.
  domain: automation
  input:
    heating:
      name: Climate Device
      description: The climate device to use.
      selector:
        entity:
          domain: climate
    temp_sensor:
      name: Temperature Sensor
      description: Temperature Sensor to check.
      selector:
        entity:
          domain: sensor
    person1:
      name: Person 1
      description: The first person that has to be home.
      default: []
      selector:
        entity:
          domain: person
    min_temp:
      name: Minimum Temp
      description: If temperature is below this value and someone is home, It turns
        heating on.
      default: 19
      selector:
        number:
          min: 15.0
          max: 25.0
          step: 0.5
          mode: slider
    set_temp:
      name: Temperature Target
      description: If the heating turns on, It heats to this target temperature.
      default: 21
      selector:
        number:
          min: 15.0
          max: 25.0
          step: 0.5
          mode: slider
    set_temp_out:
      name: Temperature Out Target
      description: Set this temperature at night or when noone is home.
      default: 18
      selector:
        number:
          min: 15.0
          max: 25.0
          step: 0.5
          mode: slider
    time_after:
      name: Time After
      description: After this time the heating turns on, so it's warm in the morning
      default: '05:30:00'
      selector:
        time: {}
    time_before:
      name: Time Before
      description: After this time the heating turns off, This to prevent the heating
        is on in the middle of the night
      default: '21:30:00'
      selector:
        time: {}
  source_url: https://github.com/Tralla/climate/blob/main/Popp_heating_1.yaml
variables:
  set_temp: !input 'set_temp'
  set_temp_out: !input 'set_temp_out'
trigger:
- platform: homeassistant
  event: start
- platform: event
  event_type: automation_reloaded
- platform: time_pattern
  minutes: /10
action:
- choose:
  - conditions:
    - condition: numeric_state
      entity_id: !input 'temp_sensor'
      below: !input 'min_temp'
    - condition: time
      before: !input 'time_before'
      after: !input 'time_after'
    - condition: state
      entity_id: !input 'person1'
      state: home
    sequence:
    - service: climate.set_temperature
      data:
        entity_id: !input 'heating'
        hvac_mode: heat
        temperature: '{{ set_temp }}'
  default:
  - service: climate.set_temperature
    data:
      entity_id: !input 'heating'
      hvac_mode: heat
      temperature: '{{ set_temp_out }}'
mode: single
